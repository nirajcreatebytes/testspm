# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:

jobs:
  build:
    permissions: write-all
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
#     - name: Build project # This would actually build your project, using zip for an example artifact
#       run: |
#         zip --junk-paths my-artifact README.md
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ github.ref }}
#         release_name: Release ${{ github.ref }}
#         draft: false
#         prerelease: false
#     - name: Upload Release Asset
#       id: upload-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#         asset_path: ./my-artifact.zip
#         asset_name: my-artifact.zip
#         asset_content_type: application/zip
        
  deploy:
    name: Create Release 
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3 # Checkout our working repository 
      - name: Conventional Changelog Action
        id: changelog 
        uses: TriPSs/conventional-changelog-action@v3 
        with: 
           github-token: ${{ secrets.github_token } 
           output-file: "false" 
      - name: Create Release # This action will create the actual release
        uses: actions/create-release@v1 
        if: ${{ steps.changelog.outputs.skipped == 'false' } 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag } 
          release_name: ${{ steps.changelog.outputs.tag } 
          body: ${{ steps.changelog.outputs.clean_changelog }
          
