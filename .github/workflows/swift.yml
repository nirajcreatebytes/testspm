# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:

jobs:
  build:
    permissions: write-all
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
#     - name: Build project # This would actually build your project, using zip for an example artifact
#       run: |
#         zip --junk-paths my-artifact README.md
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ github.ref }}
#         release_name: Release ${{ github.ref }}
#         draft: false
#         prerelease: false
#     - name: Upload Release Asset
#       id: upload-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#         asset_path: ./my-artifact.zip
#         asset_name: my-artifact.zip
#         asset_content_type: application/zip
        
  deploy:
    name: Create Release  
#     if: github.event.pull_request.merged == true
    needs: build

    runs-on: macos-latest
    steps:
      - name: Taking the Latest Release Tag number
        id: releaseVersion
        run: |
          owner="nirajcreatebytes"
          repo="testspm"
          release_json=$(curl https://api.github.com/repos/$owner/$repo/releases)
          Release_tag=$(echo "$release_json" | jq -r '.[0].tag_name')
          echo "Release_tag: Latest Tag is : $Release_tag"
          echo ::set-output name=Release_tag::"$Release_tag"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bumping Major Index
        id: bump_version_major
#         if: contains(github.event.pull_request.title, 'major')
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.releaseVersion.outputs.Release_tag }}
          version-fragment: 'major'

      - name: Bumping Minor Index
        id: bump_version_minor
#         if: contains(github.event.pull_request.title, 'minor')
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.releaseVersion.outputs.Release_tag }}
          version-fragment: 'feature'

      - name: Bumping Patch Index 
        id: bump_version_patch
#         if: contains(github.event.pull_request.title, 'patch')
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.releaseVersion.outputs.Release_tag }}
          version-fragment: 'bug'

      - name: Create release version for bump_version_major
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          owner="nirajcreatebytes"
          repo="testspm"
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             https://api.github.com/repos/$owner/$repo/releases \
            -d '{"tag_name":"${{ steps.bump_version_major.outputs.next-version }}","target_commitish":"master","name":"${{ steps.bump_version_major.outputs.next-version }}","body":"Description of the release","draft":false,"prerelease":false,"generate_release_notes":false}'
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             https://api.github.com/repos/$owner/$repo/releases \
            -d '{"tag_name":"${{ steps.bump_version_minor.outputs.next-version }}","target_commitish":"master","name":"${{ steps.bump_version_minor.outputs.next-version }}","body":"Description of the release","draft":false,"prerelease":false,"generate_release_notes":false}'
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             https://api.github.com/repos/$owner/$repo/releases \
            -d '{"tag_name":"${{ steps.bump_version_patch.outputs.next-version }}","target_commitish":"master","name":"${{ steps.bump_version_patch.outputs.next-version }}","body":"Description of the release","draft":false,"prerelease":false,"generate_release_notes":false}'
